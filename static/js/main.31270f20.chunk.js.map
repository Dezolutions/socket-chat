{"version":3,"sources":["components/JoinBlock.jsx","socket.js","components/Chat.jsx","reducer.js","App.js","index.js"],"names":["JoinBlock","onLogin","React","useState","roomId","setRoomId","userName","setUserName","isLoading","setIsLoading","onSubmit","a","alert","obj","axios","post","className","Form","Group","Control","value","onChange","e","target","type","placeholder","Button","disabled","onClick","variant","socket","io","Chat","users","messages","onAddMessage","messageValue","setMessageValue","messagesRef","useRef","useEffect","current","scrollTo","length","map","name","index","ref","message","text","as","onKeyPress","key","emit","rows","state","action","joined","payload","App","useReducer","reducer","dispatch","get","data","onSetUsers","addMessage","on","console","log","Container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31270f20.chunk.js","sourcesContent":["import React from 'react'\r\nimport axios from 'axios'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Form, Button} from 'react-bootstrap'\r\nimport '../scss/joinblock.scss'\r\n\r\nfunction JoinBlock({onLogin}) {\r\n  const [roomId, setRoomId] = React.useState('')\r\n  const [userName, setUserName] = React.useState('')\r\n  const [isLoading, setIsLoading] = React.useState(false)\r\n\r\n  const setNameValue = (e) =>{\r\n    setUserName(e.target.value)\r\n  }\r\n  const setRoomValue = (e) =>{\r\n    setRoomId(e.target.value)\r\n  }\r\n  const onSubmit = async () => {\r\n    if(!userName || !roomId){\r\n      alert('неверные данные')\r\n    }\r\n    else{\r\n      const obj = {\r\n        roomId,\r\n        userName,\r\n      };\r\n      setIsLoading(true)\r\n      await axios.post('/rooms',obj);\r\n      onLogin(obj);\r\n\r\n    }\r\n    \r\n  }\r\n  return (\r\n      <div className=\"join\">\r\n        <Form className=\"join-form\">\r\n          <p className=\"jois-title\">chat on ReactJs + Express + Socket.io</p>\r\n          <Form.Group >\r\n            <Form.Control value={roomId} onChange={setRoomValue} className=\"join-input\" type=\"text\" placeholder=\"Room ID\"/>\r\n            <Form.Control value={userName} onChange={setNameValue} className=\"join-input\" type=\"text\" placeholder=\"User Name\"/>\r\n          </Form.Group>\r\n          <Button disabled={isLoading} onClick={onSubmit} variant=\"success\">\r\n            {isLoading? 'Вход...' : 'Войти'}\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default JoinBlock\r\n","import io from 'socket.io-client';\r\n\r\nconst socket = io();\r\n\r\nexport default socket;","import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport socket from '../socket'\r\nimport { Form,Button } from 'react-bootstrap'\r\nimport '../scss/chat.scss'\r\n\r\nfunction Chat({users,messages,userName, roomId, onAddMessage}) {\r\n  const [messageValue, setMessageValue] = React.useState('');\r\n  const messagesRef = React.useRef(null);\r\n  const onSetMessageValue = (e) => {\r\n    setMessageValue(e.target.value)\r\n  }\r\n  const onEnterClick = (e) => {\r\n    if(messageValue){\r\n      if(e.key = 'Enter'){\r\n        socket.emit('ROOM:NEW_MESSAGE', {\r\n          userName,\r\n          roomId,\r\n          text: messageValue,\r\n        });\r\n        onAddMessage({ userName, text: messageValue });\r\n        setMessageValue('');\r\n      }\r\n\r\n    }\r\n    \r\n\r\n  }\r\n  const onSendMessage = () => {\r\n    if(messageValue){\r\n      socket.emit('ROOM:NEW_MESSAGE', {\r\n        userName,\r\n        roomId,\r\n        text: messageValue,\r\n      });\r\n      onAddMessage({ userName, text: messageValue });\r\n      setMessageValue('');\r\n\r\n    }\r\n    \r\n  };\r\n\r\n  React.useEffect(() => {\r\n    messagesRef.current.scrollTo(0, 99999);\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className=\"chat__wrapper\">\r\n      <div className=\"chat\">\r\n        <div className=\"chat-users\">\r\n          <p className=\"chat-room\">Комната: <strong>{roomId}</strong> </p>\r\n          <p className=\"chat-online\">Онлайн({users.length})</p>\r\n          <ul>\r\n            {users.map((name,index) => <li key={name+index} className=\"online-user\">{name}</li>)}\r\n          </ul>\r\n        </div>\r\n        <div className=\"chat-messages\">\r\n          <div ref={messagesRef} className=\"messages-block\">\r\n            {messages.map(message => (\r\n              <div className=\"message\">\r\n                <div className=\"message-inner\">\r\n                  <p className=\"message-name\">{message.userName}</p>\r\n                  <p className=\"message-text\">{message.text}</p>\r\n                </div>\r\n              </div>\r\n\r\n            ))}\r\n          </div>\r\n          \r\n            <div className=\"form\">\r\n              <Form.Control as=\"textarea\" onKeyPress={onEnterClick} value={messageValue} onChange={onSetMessageValue} placeholder=\"Введите сообщение\" className=\"message-input\" rows={3}  />\r\n              <Button onClick={onSendMessage} type=\"button\" className=\"message-btn\" variant=\"primary\">Отправить</Button>\r\n            </div>\r\n            \r\n          \r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Chat\r\n","export default (state, action) => {\r\n  switch (action.type) {\r\n    case 'JOINED':\r\n      return {\r\n        ...state,\r\n        joined: true,\r\n        roomId: action.payload.roomId,\r\n        userName: action.payload.userName\r\n      }\r\n    case 'SET_USERS':\r\n      return {\r\n        ...state,\r\n        users: action.payload\r\n      }\r\n\r\n    case 'SET_DATA':\r\n      return {\r\n        ...state,\r\n        users: action.payload.users,\r\n        messages: action.payload.messages,\r\n      };\r\n\r\n    case 'NEW_MESSAGE':\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, action.payload],\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","import React from 'react';\nimport JoinBlock from './components/JoinBlock';\nimport Chat from './components/Chat';\nimport axios from 'axios'\nimport socket from './socket'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport reducer from './reducer'\nimport {Container} from 'react-bootstrap'\nimport './scss/app.scss'\n\n\nfunction App() {\n  const [state, dispatch] = React.useReducer(reducer, {\n    joined: false,\n    roomId: null,\n    userName: null,\n    users: [],\n    messages: []\n  });\n\n  const onLogin = async (obj) => {\n    dispatch({\n      type: 'JOINED',\n      payload: obj\n    })\n    socket.emit('ROOM:JOIN',obj)\n    const { data } = await axios.get(`/rooms/${obj.roomId}`);\n    dispatch({\n      type: 'SET_DATA',\n      payload: data,\n    });\n  }\n\n  const onSetUsers = (users) => {\n    dispatch({\n      type: 'SET_USERS',\n      payload: users\n    })\n\n  }\n  const addMessage = (message) => {\n    dispatch({\n      type: 'NEW_MESSAGE',\n      payload: message,\n    });\n  };\n  React.useEffect(() => {\n    socket.on('ROOM:SET_USERS', onSetUsers);\n    socket.on('ROOM:NEW_MESSAGE', addMessage);\n\n  },[])\n\n  \n  console.log(state)\n  return (\n    <Container>\n      <div className=\"app\">\n        {!state.joined? <JoinBlock className=\"join\" onLogin={onLogin}/> : <Chat {...state} onAddMessage={addMessage} /> }\n      </div>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/index.scss';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}